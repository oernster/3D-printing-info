###########################################################
# Print Start
###########################################################
[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP= params.BED|default(100)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(180)|float %}

# Starts heating to target temp, doesn't wait for hotend temp
    M117 Preheating...
    M104 S150           # set initial hot end temp to 150 to avoid oozing. dont wait
    M190 S{BED_TEMP}    # wait for BEDR to reach temp ready for qgl and bed mesh

# Homes machine
    BED_MESH_CLEAR
    M117 Homing...
    SMARTHOME                      ; home all axes if not already homed
    SMARTQGL                       ; Do QGL if not already done.
    G90                            ; absolute positioning
    G1 Z35 F3000                   ; move nozzle away from bed
    BED_MESH_CALIBRATE

# Sets and waits for target temps, parks over purge location to prevent ooze on the print bed
    M117 Heating...
    M109 S{EXTRUDER_TEMP}
    M117 Printing Initiated...
    M117 PURGE LINE  
    LINE_PURGE      ; Run Purge Line Macro in KAMP
   
[gcode_macro SMARTHOME]
gcode:
    {% if printer.toolhead.homed_axes == "xyz" %}
        M117 Printer is already homed
    {% else %}
        M117 Printer needs homed...
        G28
    {% endif %}

[gcode_macro SMARTQGL]
gcode:
  {% if printer.quad_gantry_level.applied|lower == 'false' %}
        {% if V %}
            RESPOND MSG="QGL..."
       {% endif %}
        QUAD_GANTRY_LEVEL
        G28 Z
    {% endif %}

[gcode_macro NEW_MESH]
description: Create new bed mesh at current target bed temperature
gcode:
 ##### get target get temperature #####
  {% set bed_temp = printer.heater_bed.target|int %}
  {% set mesh_name = "Bed_Temp-" + bed_temp|string + "C" %}
  M117 Waiting Bed Temp
  M190 S{bed_temp}
  M117 Waiting 15 Mins
  G4 P900000
  M117 Home and Z Tilt
  G32
  M117 Creating New Mesh
  BED_MESH_CALIBRATE PROFILE={mesh_name}
  M117 Saving Bed Mesh {mesh_name}
  SAVE_CONFIG

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.axis_maximum.x - 10 %}
    {% set y_safe = th.axis_maximum.y - 10 %}
    {% set z_safe = [th.position.z + 10, th.axis_maximum.z]|min %}
    M400                           ; wait for buffer to clear
    M220 S100                      ; reset print speed override to 100%
    M221 S100                      ; reset extrude factor override to 100%
    G90                            ; absolute positioning
    G92 E0                         ; zero the extruder
    G1 E-3.0 F3600                 ; retract filament
    G0 X{x_safe} Y{y_safe} Z{z_safe} F3600  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    STATUS_OFF
    BED_MESH_CLEAR
    # BEEP I=1 DUR=300 FREQ=1600
    # BEEP I=1 DUR=300 FREQ=1800
    # BEEP I=3 DUR=200 FREQ=2000
    M117 Done!

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(50) %}      #edit to your park position
    {% set y = params.Y|default(10) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(0) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    STATUS_BUSY
    PAUSE_BASE
       
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
    SET_IDLE_TIMEOUT TIMEOUT=43200

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(0) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    status_printing
    
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
    RESUME_BASE {get_params}
    
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    M220 S100                      ; reset print speed override to 100% 
    M221 S100               ; reset extrude factor override to 100% 
    TURN_OFF_HEATERS
    STATUS_BUSY
    PAUSE_BASE
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = 20 %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-5 F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X345 Y345 F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
    STATUS_OFF
    CANCEL_PRINT_BASE